(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{571:function(e,a,s){"use strict";s.r(a);var t=s(13),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"序言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序言"}},[e._v("#")]),e._v(" 序言")]),e._v(" "),s("p",[e._v("webpack的热更新我一直都在用，但是很少深入去了解它的具体原理。最近看到极客时间的webpack课程，正好有机会深入解析一下webpack的热更新。")]),e._v(" "),s("h2",{attrs:{id:"热更新和文件监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#热更新和文件监听"}},[e._v("#")]),e._v(" 热更新和文件监听")]),e._v(" "),s("p",[e._v("基于WDS (Webpack-dev-server)的模块热替换，只需要局部刷新页面上发生变化的模块，同时可以保留当前的页面状态，比如复选框的选中状态、输入框的输入等。当代码有修改时自动构建，构建完成后通过热更新让浏览器去变化，省去了自己刷新浏览器的步骤。")]),e._v(" "),s("p",[e._v("热更新需要借助"),s("code",[e._v("webpack-dev-server")]),e._v(" 和 "),s("code",[e._v("HotModuleReplacementPlugin")]),e._v("来完成")]),e._v(" "),s("p",[e._v("输出文件在内存中，没有磁盘IO，所以构建速度更快一点")]),e._v(" "),s("p",[e._v("与之形成对比的是文件监听，也就是 "),s("code",[e._v("webpack --watch")]),e._v("，它输出的文件放在磁盘中。这里顺便说一下监听的原理：")]),e._v(" "),s("blockquote",[s("p",[e._v("轮询去判断文件的最后编辑时间是否发生了变化，当发生变化时，先缓存起来，等待一段时间（aggregateTimeout），在这个时间段内的所有变化文件拿去构建，一起把构建的结果生成到bundle中")])]),e._v(" "),s("h2",{attrs:{id:"基本用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本用法"}},[e._v("#")]),e._v(" 基本用法")]),e._v(" "),s("ol",[s("li",[e._v("在package.json 中 添加命令")])]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"dev"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"webpack-dev-server --open"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// open 参数每次构建完成自动开启浏览器")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[e._v("创建webpack development config")])]),e._v(" "),s("li",[s("p",[e._v("配置插件，这个插件是webpack内置的，所以不需要引用")])])]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("plugins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("webpack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("HotModuleReplacementPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("ol",{attrs:{start:"4"}},[s("li",[e._v("配置热更新")])]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("devServer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("contentBase")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./dist'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 服务的基础目录")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("hot")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 开启热更新")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h2",{attrs:{id:"原理分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理分析"}},[e._v("#")]),e._v(" 原理分析")]),e._v(" "),s("p",[e._v("首先来看看webpack的几个基本概念：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Webpack Compile： 将 JS 源代码编译成 bundle.js")])]),e._v(" "),s("li",[s("p",[e._v("HMR Server: 用来将热更新的文件输出给 HMR Runtime")])]),e._v(" "),s("li",[s("p",[e._v("Bundle Server： 提供文件在浏览器的访问，以服务的方式访问")])]),e._v(" "),s("li",[s("p",[e._v("HMR Runtime：会被注入到浏览器，更新文件的变化")])]),e._v(" "),s("li",[s("p",[e._v("bundle.js 构建好输出的文件")])])]),e._v(" "),s("p",[e._v("webpack 在热更新模式下，启动服务后，服务端会与客户端建立一个长链接。（用websocket）")]),e._v(" "),s("p",[e._v("文件修改后，就会触发编译, 生成新的hash值。")]),e._v(" "),s("p",[e._v("所以说存在一个监听本地代码的变化方法，主要是通过setupDevMiddleware方法实现的。\n这个方法主要执行了webpack-dev-middleware库，调用了compiler的watch。")]),e._v(" "),s("p",[e._v("服务端会通过长链接向客户端推送一条消息，客户端收到后，会重新请求一个 js 文件。")]),e._v(" "),s("p",[e._v("返回的 js 文件会调用 webpackHotUpdatehmr 方法，用于替换掉 "),s("strong",[e._v("webpack_modules")]),e._v(" 中的部分代码。")]),e._v(" "),s("h2",{attrs:{id:"webpack-dev-middleware和webpack-dev-server的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-middleware和webpack-dev-server的区别"}},[e._v("#")]),e._v(" webpack-dev-middleware和webpack-dev-server的区别")]),e._v(" "),s("p",[e._v("其实就是因为webpack-dev-server只负责启动服务和前置准备工作，所有文件相关的操作都抽离到webpack-dev-middleware库了，主要是本地文件的编译和输出以及监听，无非就是职责的划分更清晰了。")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6844904008432222215#heading-1",target:"_blank",rel:"noopener noreferrer"}},[e._v("轻松理解webpack热更新原理"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000040382502",target:"_blank",rel:"noopener noreferrer"}},[e._v("Webpack 热更新原理"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6844904008432222215",target:"_blank",rel:"noopener noreferrer"}},[e._v("轻松理解webpack热更新原理"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);